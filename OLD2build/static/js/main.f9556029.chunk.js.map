{"version":3,"sources":["App.js","services/notes.js","components/Notification.js","components/Footer.js","App4.js","index.js"],"names":["App","baseUrl","noteService","getAll","axios","get","then","res","data","create","newObject","post","update","id","put","Notification","message","className","Footer","style","color","fontStyle","fontSize","App4","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorStr","setErrorStr","useEffect","unsubBool","catch","error","console","log","filteredNotes","filter","e","important","type","onClick","p","map","each","findNote","find","updatedNote","content","setTimeout","toggleImoprtance","onSubmit","preventDefault","name","onChange","length","target","value","Math","random","date","Date","toISOString","required","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9556029.chunk.js","sourcesContent":["import React, { useState } from \"react\"\n\n\n\n\nfunction Button(props) {\n  return (\n    <button type=\"text\" onClick={props.onClick}>\n      {props.children}\n    </button>\n  )\n}\n\nconst Statistics = ({values}) => {\n  console.log(values)\n  const {good, neutral ,bad} = values\n\n  const positiveRating = (good / (good + neutral + bad))\n\n  if ((good + neutral + bad) === 0) return <div>No feedback yet</div>\n\n  return(\n    <>\n    <div>Total Votes: {good + neutral + bad}</div>\n    <div>Average: {((good + neutral + bad) / 3).toFixed(2)}</div>\n    <div>Positive Rating: {positiveRating? (positiveRating * 100).toFixed(2) : \"0\"}%</div>\n    </>\n  )\n}\n\n\nfunction App() {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <center>\n      <div className=\"App\">\n        <h2>Feedback App</h2>\n        <header className=\"App-header\">\n          <Button onClick={() => setGood((p) => p + 1)}>good</Button>\n          <Button onClick={() => setNeutral((p) => p + 1)}>neutral</Button>\n          <Button onClick={() => setBad((p) => p + 1)}>bad</Button>\n        </header>\n        <br />\n        <h2>Statistics</h2>\n\n        <Statistics values={{good, neutral, bad}} />\n        <br />\n      </div>\n    </center>\n  )\n}\n\nexport default App\n","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/notes'  // this is for local node server\r\n// const baseUrl = '/api/notes'  // this is for heroku deployment\r\n// const baseUrl = 'http://localhost:3001/notes'   // this is for json-server --port 3001 --watch db.json\r\n\r\n\r\nconst getAll = () => {\r\n   const response = axios.get(baseUrl)\r\n   return response.then((res) => res.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const response = axios.post(baseUrl, newObject)\r\n\r\n   return response.then(res=> {\r\n    return res.data\r\n    })\r\n}\r\n\r\n\r\nconst update = (id, newObject) => {\r\n   const response = axios.put(`${baseUrl}/${id}`, newObject)\r\n   return response.then(res => res.data)\r\n}\r\n\r\nconst noteService = {\r\n   getAll: getAll,\r\n   create: create,\r\n   update: update,\r\n}\r\n\r\nexport default noteService\r\n","\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","const Footer = () => {\r\n   const footerStyle = { color: 'green', fontStyle: 'italic', fontSize: 16 }\r\n   return (\r\n      <div style={footerStyle}>\r\n         {' '}\r\n         <br /> <em>Note app, Department of Computer Science, University of Helsinki 2021</em>{' '}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from 'react'\r\n\r\nimport noteService from './services/notes'  // has functions     getAll(), create(newObject), update(id, newObject)\r\nimport Notification from './components/Notification'\r\n\r\nimport Footer from \"./components/Footer.js\"\r\n\r\n\r\nconst App4 = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [newNote, setNewNote] = useState({})\r\n    const [showAll, setShowAll] = useState(true)\r\n    const [errorStr, setErrorStr] = useState(null)\r\n\r\n\r\n    // fetching all notes\r\n    useEffect(()=> {\r\n        let unsubBool = false\r\n        noteService.getAll().then(res=>{\r\n\r\n            if (!unsubBool){\r\n                setNotes(res)\r\n            }\r\n        }).catch(error=> {console.log('kek:', error.message)})\r\n\r\n        return ()=> {unsubBool = true}\r\n    },[])\r\n\r\n      \r\n      \r\n    const filteredNotes = (showAll? notes : notes.filter(e => e.important)) //only show important notes\r\n\r\n\r\n    // adding new Note\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        noteService\r\n        .create(newNote)\r\n        .then(res => {\r\n            console.log(res)\r\n\r\n            console.log('submitted OK')\r\n            setNewNote({content: ''})   // empty the input field\r\n            setNotes([...notes, res])\r\n        })\r\n    }\r\n\r\n\r\n    const inputHandler = (e) => {\r\n        setNewNote({\r\n            id: notes.length+1,     // it is better to let server do the IDs\r\n            content: e.target.value,\r\n            important: Math.random() < 0.5,\r\n            date: new Date().toISOString(),\r\n        })\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const btnHandler = () => {\r\n        setShowAll(p=>!p)\r\n    }\r\n\r\n    \r\n    // Changing note with axios PUT\r\n    const toggleImoprtance = (id) => {\r\n\r\n     \r\n        const findNote = notes.find(e=> e.id === id)\r\n        const updatedNote = {...findNote, important: !findNote.important}\r\n        noteService.update(id, updatedNote)\r\n        .then(res=> {    // set state with updated note.\r\n            console.log('resdata', res)\r\n            setNotes(notes.map(e=> {\r\n                return e.id === id ?  res : e\r\n            }))\r\n        }).catch(error => {\r\n            setErrorStr(`the note ${findNote.content} was already deleted`)\r\n            setTimeout(()=>{\r\n                setErrorStr(null)\r\n            },5000)\r\n          \r\n            setNotes(notes.filter(e => e.id !== id))\r\n        })\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n           <Notification message={errorStr} />\r\n            <button type=\"button\" onClick={btnHandler}>{showAll? 'displaying all' : 'displaying important'}</button>\r\n            <ul>\r\n                {filteredNotes.map((each) => {\r\n                    return <li key={each.id}><button onClick={()=> toggleImoprtance(each.id)}>{each.important? \"V\": <>&nbsp;</>}</button> {each.content} </li>\r\n                })}\r\n            </ul>\r\n            <form onSubmit={submitHandler} name=\"form\" >\r\n                <input type=\"text\" onChange={inputHandler} value={newNote.content} required />\r\n            </form>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App4\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport axios from 'axios'\n\nimport App from './App';\nimport App2 from './App2';\nimport App3 from './App3';\nimport App4 from './App4';\nimport App5 from './Exercise26210.js';\nimport App6 from './Exercise212.js';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App4 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}