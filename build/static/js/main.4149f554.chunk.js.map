{"version":3,"sources":["services/login.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["login","credentials","a","axios","post","response","data","baseUrl","token","create","newObject","config","headers","Authorization","noteService","getAll","get","then","res","update","id","put","setToken","newToken","Notification","message","className","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorStr","setErrorStr","username","setUsername","password","setPassword","user","setUser","useEffect","unsubBool","catch","error","console","log","loggedUserJSON","window","localStorage","getItem","JSON","parse","filteredNotes","filter","e","important","submitHandler","preventDefault","content","inputHandler","length","target","value","Math","random","date","Date","toISOString","loginHandler","event","loginService","setItem","stringify","setTimeout","onSubmit","type","name","onChange","required","onClick","p","map","each","findNote","find","updatedNote","toggleImoprtance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4149f554.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/notes'  // this is for local node server\r\n// const baseUrl = '/api/notes'  // this is for heroku deployment\r\n// const baseUrl = 'http://localhost:3001/notes'   // this is for json-server --port 3001 --watch db.json\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const response = axios.get(baseUrl)\r\n  return response.then((res) => res.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = { headers: { Authorization: token } }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\n\r\nconst update = (id, newObject) => {\r\n  const response = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.then(res => res.data)\r\n}\r\n\r\nconst noteService = {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  setToken: setToken,\r\n}\r\n\r\nexport default noteService\r\n","\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null || !message ) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","const Footer = () => {\r\n   const footerStyle = { color: 'green', fontStyle: 'italic', fontSize: 16 }\r\n   return (\r\n      <div style={footerStyle}>\r\n         {' '}\r\n         <br /> <em>Note app, Department of Computer Science, University of Helsinki 2021</em>{' '}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from 'react'\r\n\r\nimport loginService from './services/login'\r\nimport noteService from './services/notes'  // has functions     getAll(), create(newObject), update(id, newObject)\r\nimport Notification from './components/Notification'\r\n\r\nimport Footer from \"./components/Footer.js\"\r\n\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState({})\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorStr, setErrorStr] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n  ////////////////////////////////////////////////////////////////////////////////\r\n  // FETCH all notes\r\n  useEffect(() => {\r\n    let unsubBool = false\r\n    noteService.getAll().then(res => {\r\n      if (!unsubBool) {\r\n        setNotes(res)\r\n      }\r\n    }).catch(error => { console.log('kek:', error.message) })\r\n\r\n    return () => { unsubBool = true }\r\n  }, [])\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////////////////////\r\n  // Token Check in Local Storage.\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  const filteredNotes = (showAll ? notes : notes.filter(e => e.important)) //only show important notes\r\n\r\n  ////////////////////////////////////////////////////////////////////////////////\r\n  // ADD new Note\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    noteService\r\n      .create(newNote)\r\n      .then(res => {\r\n        console.log(res)\r\n\r\n        console.log('submitted OK')\r\n        setNewNote({ content: '' })   // empty the input field\r\n        setNotes([...notes, res])\r\n      }).catch(error => {\r\n        setErrorStr(`${error.response.data}`)\r\n        console.log(\"<><><>ValidationError\", error.response.data, \"end//ValidationError\")\r\n      })\r\n  }\r\n\r\n\r\n  const inputHandler = (e) => {\r\n    setNewNote({\r\n      id: notes.length + 1,     // it is better to let server do the IDs\r\n      content: e.target.value,\r\n      important: Math.random() < 0.5,\r\n      date: new Date().toISOString(),\r\n    })\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  const btnHandler = () => {\r\n    setShowAll(p => !p)\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////\r\n  // CHANGE note with axios PUT\r\n  const toggleImoprtance = (id) => {\r\n\r\n    const findNote = notes.find(e => e.id === id)\r\n    const updatedNote = { ...findNote, important: !findNote.important }\r\n    noteService.update(id, updatedNote)\r\n      .then(res => {    // set state with updated note.\r\n        console.log('resdata', res)\r\n        setNotes(notes.map(e => {\r\n          return e.id === id ? res : e\r\n        }))\r\n      }).catch(error => {\r\n        setErrorStr(`the note ${findNote.content} was already deleted`)\r\n        setTimeout(() => {\r\n          setErrorStr(null)\r\n        }, 5000)\r\n\r\n        setNotes(notes.filter(e => e.id !== id))\r\n      })\r\n  }\r\n\r\n\r\n  /////////////////////////////\r\n  //   LOGIN \r\n  const loginHandler = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({ username, password })\r\n\r\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user))\r\n\r\n      noteService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorStr('Wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorStr(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={loginHandler}>\r\n      <div>\r\n        username\r\n        <input type=\"text\" value={username} name=\"Username\" onChange={({ target }) => setUsername(target.value)} />\r\n      </div>\r\n      <div>\r\n        password\r\n        <input type=\"password\" value={password} name=\"Password\" onChange={({ target }) => setPassword(target.value)} />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>\r\n  )\r\n\r\n  const noteForm = () => (\r\n    <form onSubmit={submitHandler} name=\"form\" >\r\n      <input type=\"text\" onChange={inputHandler} value={newNote.content} required />\r\n    </form>\r\n  )\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorStr} />\r\n      {user === null && loginForm()}\r\n      {user !== null && noteForm()}\r\n      {user !== null && <div>Hello, {user.name}</div>}\r\n\r\n\r\n      <button type=\"button\" onClick={btnHandler}>{showAll ? 'displaying all' : 'displaying important'}</button>\r\n      <ul>\r\n        {filteredNotes.map((each) => {\r\n          return <li key={each.id}><button onClick={() => toggleImoprtance(each.id)}>{each.important ? \"V\" : <>&nbsp;</>}</button> {each.content} </li>\r\n        })}\r\n      </ul>\r\n\r\n\r\n\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport axios from 'axios'\n\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}